---
	const { title, img, tags, description, preview, code} = Astro.props;
	const ASSETS_PATH = "/assets/images/projects/";
---
<section class="project" id="projects">
	<img src={ASSETS_PATH + img} alt={title} class="project__image" loading="lazy" decoding="async" />
	<div class="project__body">
		<header class="project__header">
			<h3 class="project__title">{title}</h3>
		</header>

		<div class="project__tag-list">
			{
				tags.map((tag) => (
					<span class="project__tag tag">{tag}</span>
				))
			}
		</div>

		<p class="project__text">{description}</p>

		<div class="project__actions">
			<a href={preview} rel="external" target="_blank" class="button">
			<span class="project__icon--preview"></span>
			Preview
			</a>
			<a href={code} rel="external" target="_blank" class="button button--reverse">
			<span class="project__icon--code"></span>
			Code
			</a>
		</div>
	</div>
</section>

<style lang="scss">
	.project {
		border-radius: 0.5em;
		background-color: var(--secondary-bg-colour);
		padding: 1em;

		&__actions {
			display: flex;
			justify-content: space-between;
			gap: 1em;
		}

		&__icon{
			&--preview, &--code {
				mask-repeat: no-repeat;
				mask-position-x: center;
				mask-position-y: center;
				width: 1.5em;
				aspect-ratio: 1 / 1;
				display: inline-block;
				overflow: hidden;
				background-color: currentColor;
			}

			&--preview {
				mask-image: url(/assets/images/icons/eye.svg);
			}

			&--code {
				mask-image: url(/assets/images/icons/laptop.svg);
			}
		}
	}

	@media only screen and (min-width: 1070px) {
		.project {
			display: flex;
			gap: 1em;
			flex-basis: 45%;

			&__body {
				flex-grow: 1;
			}

			&__image {
				max-width: 25rem;
				aspect-ratio: 16 / 9;
			}
		}
	}
</style>

<style lang="scss">
.button {
    text-align: center;
    background-color: var(--primary-colour);
    color: var(--body-bg-colour);
    padding: 0.5em 2em;
    border-radius: 0.4em;
    font-weight: 600;
    text-decoration-line: none;
	display: inline-flex;
	align-items: center;
	column-gap: 0.5ch;
    &:hover {
        animation: shadow-inset-center 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
    }

	&--reverse {
		color: var(--primary-colour);
		background-color: transparent;
		border: 1px solid;
	}
}

@keyframes shadow-inset-center {
    0% {
        box-shadow: inset 0 0 0 0;
    }
    100% {
        box-shadow: inset 0 0 1ch 0;
    }
}
</style>